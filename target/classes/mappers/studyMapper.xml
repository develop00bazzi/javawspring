<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.spring.javawspring.dao.StudyDAO">
	<select id="getGuestMid" resultType="com.spring.javawspring.vo.GuestVO">
		select * from guest_s where name=#{name};
	</select>
	
	<select id="getGuestNames" resultType="com.spring.javawspring.vo.GuestVO">
		select * from guest_s where name like concat('%',#{name},'%');
	</select>
	
	<select id="getGuestSearch" resultType="com.spring.javawspring.vo.GuestVO">
        select * from guest_s where ${search} like concat('%', #{searchString}, '%');
    </select>
    
	<select id="getEmailList" resultType="com.spring.javawspring.vo.MemberVO">
        select * from member_s;
    </select>
    
    <select id="getQrCodeDB" resultType="String">
    	select bigo from qrcode where idx=#{idx}
    </select>
    
    <select id="getKakaoAddressName" resultType="com.spring.javawspring.vo.KakaoAddressVO">
    	select * from kakaoAddress where address=#{address};
    </select>
    
    <select id="getKakaoAddressNameList" resultType="com.spring.javawspring.vo.KakaoAddressVO">
    	select * from kakaoAddress order by address;
    </select>
    
    <select id="getTransactionList" resultType="com.spring.javawspring.vo.TransactionVO">
    	select u1.*, u2.nickName as nickName, u2.job as job from user u1 join user2 u2 on u1.mid=u2.mid order by idx desc;
    </select>
    
    <insert id="setQrCodeDB">
    	insert into qrcode values (#{strUid}, #{qrCodeName}, #{bigo});
    </insert>
    
    <insert id="setKakaoAddressName">
    	insert into kakaoAddress values (#{vo.address}, #{vo.latitude}, #{vo.longitude});
    </insert>
    
    <insert id="setTransInput1">
    	insert into user values (default, #{vo.mid}, #{vo.name}, #{vo.age}, #{vo.address});
    </insert>
    
    <insert id="setTransInput2">
    	insert into user2 values (#{vo.mid}, #{vo.nickName}, #{vo.job});
    </insert>
    
    <insert id="setTransInput">
    	insert into user values (default, #{vo.mid}, #{vo.name}, #{vo.age}, #{vo.address});
    	insert into user2 values (#{vo.mid}, #{vo.nickName}, #{vo.job});
    </insert>
    
  	<delete id="kakaoEx2DeletePost">
  		delete from kakaoAddress where address=#{address};
  	</delete>
	
</mapper>